{
  "swagger": "2.0",
  "info": {
    "description": "A collection of APIs for PathWay_TO_GOLD, verify identity with api key given to you by the developer BELOW",
    "version": "1.0.0",
    "title": "PATHWAY_TO_GOLD"
  },
  "securityDefinitions": {
    "ApiKeyHeader": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
    }
  },
  "paths": {
    "/api/user/all": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get all users",
        "security": [{ "ApiKeyHeader": [] }],
        "responses": {
          "200": { "description": "User information retrieved successfully." },
          "404": { "description": "User not found." },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/user_exists": {
      "post": {
        "tags": ["User Management"],
        "summary": "User exists",
        "security": [{ "ApiKeyHeader": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UserExists" }
          }
        ],
        "responses": {
          "200": { "description": "User information retrieved successfully." },
          "404": { "description": "User not found." },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get user information",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "responses": {
          "200": { "description": "User information retrieved successfully." },
          "404": { "description": "User not found." },
          "401": { "description": "Unauthorized." }
        }
      },
      "put": {
        "tags": ["User Management"],
        "summary": "Update a user.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateUserRequest" }
          }
        ],
        "responses": {
          "201": { "description": "User updated successfully." },
          "406": {
            "description": "Missing required fields."
          },
          "401": { "description": "Unauthorized." },
          "404": { "description": "User not found." }
        }
      },
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete a user.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "responses": {
          "201": { "description": "User deleted successfully." },
          "406": {
            "description": "Missing required fields."
          },
          "401": { "description": "Unauthorized." },
          "404": { "description": "User not found." }
        }
      }
    },
    "/api/signup": {
      "post": {
        "tags": ["User Management"],
        "summary": "Create a new user.",
        "security": [{ "ApiKeyHeader": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateUserRequest" }
          }
        ],
        "responses": {
          "201": { "description": "User created successfully." },
          "406": {
            "description": "User already exists or missing required fields."
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/send-otp": {
      "post": {
        "tags": ["Mail Management"],
        "summary": "Send an OTP to a user's email.",
        "description": "This endpoint is protected and sends an OTP for email verification purposes.In the body, channel can either be email or sms, if email is set as channel, specify the email if sms is set as channel, specify the phone",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SendOtpRequest" }
          }
        ],
        "responses": {
          "200": { "description": "OTP sent successfully." },
          "400": { "description": "Missing required data in body: email." },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/send-otp-sms": {
      "post": {
        "tags": ["Mail Management"],
        "summary": "Send an OTP to a user's phone.",
        "description": "This endpoint is protected and sends an OTP for phone verification purposes.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/SendOtpSmsRequest" }
          }
        ],
        "responses": {
          "200": { "description": "OTP sent successfully." },
          "400": { "description": "Missing required data in body: email." },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/verify-otp": {
      "post": {
        "tags": ["Verification Management"],
        "summary": "Verify the OTP sent to a user. In the body, channel can either be email or sms, if email is set as channel, specify the email if sms is set as channel, specify the phone",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyOtpRequest" }
          }
        ],
        "responses": {
          "200": { "description": "OTP verification successful." },
          "400": {
            "description": "Invalid request format or missing required fields."
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/verify-otp-sms": {
      "post": {
        "tags": ["Verification Management"],
        "summary": "Verify the OTP sent to a user by sms.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyOtpSmsRequest" }
          }
        ],
        "responses": {
          "200": { "description": "OTP verification successful." },
          "400": {
            "description": "Invalid request format or missing required fields."
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/verify-totp": {
      "post": {
        "tags": ["Verification Management"],
        "summary": "Verify the TOTP from authenticator app.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyTOTP" }
          }
        ],
        "responses": {
          "200": { "description": "OTP verification successful." },
          "400": {
            "description": "Invalid request format or missing required fields."
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/activate-totp": {
      "post": {
        "tags": ["Verification Management"],
        "summary": "Activate TOTP 2fa, Convert return to image and scan  by auth app.",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Example base64 encoded string to be converted to image"
          },
          "400": {
            "description": "Invalid request format or missing required fields."
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Verification Management"],
        "summary": "Log in a user with email and password.",
        "security": [{ "ApiKeyHeader": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginRequest" }
          }
        ],
        "responses": {
          "200": { "description": "Login successful." },
          "401": { "description": "Incorrect password." },
          "400": {
            "description": "Invalid request format or missing required fields."
          }
        }
      }
    },
    "/api/bank": {
      "post": {
        "tags": ["Bank Management"],
        "summary": "Attach a bank to a user",
        "security": [{ "ApiKeyHeader": [] }, { "Bearer": [] }],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateBankRequest" }
          }
        ],
        "responses": {
          "201": { "description": "Bank created successfully." },
          "400": {
            "description": "Bad request"
          },
          "401": { "description": "Unauthorized." }
        }
      }
    },
    "/static/banks.json": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get financial institutions details registered with NIBBS",
        "responses": {
          "200": { "description": "Success" }
        }
      }
    },
    "/api/price": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get coin current price",
        "responses": {
          "200": { "description": "Success" }
        },
        "parameters": [
          {
            "in": "query",
            "name": "coin",
            "required": true
          }
        ]
      }
    },
    "/api/landing-prices": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get landing page current price",
        "responses": {
          "200": { "description": "Success" }
        }
      }
    },
    "/api/all-prices": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get USDT pair price",
        "responses": {
          "200": { "description": "Success" }
        }
      }
    }
  },
  "definitions": {
    "SendOtpRequest": {
      "type": "object",
      "required": ["email"],
      "properties": {
        "email": { "type": "string" }
      }
    },
    "SendOtpSmsRequest": {
      "type": "object",
      "required": ["phone"],
      "properties": {
        "phone": { "type": "string" }
      }
    },
    "VerifyOtpRequest": {
      "type": "object",
      "required": ["otp", "email"],
      "properties": {
        "otp": { "type": "string" },
        "email": { "type": "string" }
      }
    },
    "VerifyOtpSmsRequest": {
      "type": "object",
      "required": ["otp", "phone"],
      "properties": {
        "otp": { "type": "string" },
        "phone": { "type": "string" }
      }
    },
    "VerifyTOTP": {
      "type": "object",
      "required": ["code"],
      "properties": {
        "otp": { "type": "string" }
      }
    },
    "GetRequest": {
      "type": "object",
      "properties": {
        "email": { "type": "string" },
        "phone": { "type": "string" },
        "username": { "type": "string" }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": ["email", "password"],
      "properties": {
        "email": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "CreateUserRequest": {
      "type": "object",
      "required": ["fullname", "email", "password", "phone", "username"],
      "properties": {
        "fullname": { "type": "string" },
        "email": { "type": "string" },
        "password": { "type": "string" },
        "phone": { "type": "string" },
        "username": { "type": "string" }
      }
    },
    "UpdateUserRequest": {
      "type": "object",
      "properties": {
        "pin": { "type": "string" },
        "username": { "type": "string" },
        "fullname": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "UserExists": {
      "type": "object",
      "required": ["email"],
      "properties": {
        "email": { "type": "string" }
      }
    },
    "CreateBankRequest": {
      "type": "object",
      "required": ["bank"],
      "properties": {
        "bank": {
          "type": "object",
          "properties": {
            "bank_name": { "type": "string" },
            "account_number": { "type": "string" },
            "bank_code": { "type": "string" }
          },
          "required": ["bank_name", "account_number", "bank_code"]
        }
      }
    }
  }
}
